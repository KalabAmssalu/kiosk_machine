"use client";

import { forwardRef, useMemo } from "react";

import Field from "@/components/shared/field/Field";
import { Button } from "@/components/ui/button";
import { useAppSelector } from "@/hooks/storehooks";

interface PersonalInfoProps {
	onConfirm: () => void;
	ref: React.RefObject<HTMLDivElement>;
}

// eslint-disable-next-line react/display-name
const Preview = forwardRef<HTMLDivElement, PersonalInfoProps>(
	({ onConfirm }, ref) => {
		const data = useAppSelector((state) => state);

		const displayedData = useMemo(() => {
			if (!data) return null;
			// const {
			// 	first_name,
			// 	middle_name,
			// 	last_name,
			// 	id_number,
			// 	gender,
			// 	organization_name,
			// 	organization_type,
			// 	...Saved
			// } = data;
			// return Saved;
		}, [data]);
		const handlemodal = () => {
			// onIsOpenChange(true);
			onConfirm();
		};

		return (
			<>
				<div className="min-h-screen bg-gray-100 p-8 flex justify-center">
					{/* A4 size container - 210mm x 297mm */}
					<div
						className="bg-white w-[210mm] h-[297mm] shadow-lg p-12 relative"
						ref={ref}
					>
						<div className="border-b pb-6 mb-6">
							<h1 className="text-3xl font-bold text-gray-900">
								Information Preview
							</h1>
							{/* <h2 className="text-md font-semibold text-gray-700 mt-2">
								{`${data.users.currentUser.first_name || ""} ${data.middle_name || ""} ${data.last_name || ""}`}
							</h2>
							<h3 className="text-md text-gray-600 mt-1">{data.organization_name}</h3> */}
							<div className="text-sm text-gray-500 mt-2">
								Document generated on {new Date().toLocaleDateString()}
							</div>
						</div>

						{/* Content Grid */}
						{displayedData ? (
							<div className="grid grid-cols-2 gap-x-6 gap-y-6 text-sm">
								<div className="space-y-6">
									{/* Personal Information */}
									<div>
										<h2 className="text-lg font-semibold text-gray-900 mb-4">
											Personal Information
										</h2>
										<div className="space-y-3">
											{[
												"first_name",
												"middle_name",
												"last_name",
												"id_number",
												"gender",
											].map((key) => (
												<Field
													key={key}
													label={key}
													value={String(
														displayedData[key as keyof typeof displayedData]
													)}
													local="providerInfoForm.fields"
												/>
											))}
										</div>
									</div>

									{/* Organization Information */}
									<div>
										<h2 className="text-lg font-semibold text-gray-900 mb-4">
											Organization Information
										</h2>
										<div className="space-y-3">
											{["organization_type", "organization_name"].map((key) => (
												<Field
													key={key}
													label={key}
													value={String(
														displayedData[key as keyof typeof displayedData]
													)}
													local="providerInfoForm.fields"
												/>
											))}
										</div>
									</div>

									{/* Contact Information */}
									<div>
										<h2 className="text-lg font-semibold text-gray-900 mb-4">
											Contact Information
										</h2>
										<div className="space-y-3">
											{["phone_number"].map((key) => (
												<Field
													key={key}
													label={key}
													value={String(
														displayedData[key as keyof typeof displayedData]
													)}
													local="providerInfoForm.fields"
												/>
											))}
										</div>
									</div>
								</div>
							</div>
						) : (
							<p>No data available to preview.</p>
						)}

						{/* Footer */}
						<div className="absolute bottom-8 left-12 right-12 text-xs text-gray-400 border-t pt-4">
							<div className="flex justify-between">
								<span>Generated by Mint System</span>
								<span>Page 1 of 1</span>
							</div>
						</div>
					</div>
					{/* Submit Button */}
					<div className="absolute bottom-20 right-12">
						<Button
							onClick={handlemodal}
							className="bg-green-500 hover:bg-green-600 text-white"
						>
							Confirm
						</Button>
					</div>
				</div>
			</>
		);
	}
);

export default Preview;
